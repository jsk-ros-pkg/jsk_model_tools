#!/usr/bin/env roseus

(require :unittest "lib/llib/unittest.l")

(defun error (code msg1 form &optional (msg2))
   (format *error-output* "~C[1;3~Cm~A error: ~A"
                #x1b (+ 1 48)   *program-name* msg1)
   (if msg2 (format *error-output* " ~A" msg2))
   (if form (format *error-output* " in ~s" form))
   (format *error-output* ", exitting...~C[0m~%"  #x1b)
   (exit 1))

(defun write-info (fmt &rest args)
  (format *error-output* "~C[1;3~Cm" #x1b (+ 1 49))
  (apply #'format *error-output* fmt args)
  (format *error-output* "~C[0m" #x1b)
  (finish-output *error-output*))

(init-unit-test)

(deftest test-no-yaml
  (setq lisp::*error-handler* 'error)
  (write-info "Loading robot model~%")
  (load "sample1-noyaml.l")
  (write-info "Create instances~%")
  (setq *robot* (samplerobot))
  (write-info "Check Instances name ~A~%" (send *robot* :name))
  (assert (equal (send *robot* :name) "SampleRobot"))
  (write-info "Done~%"))

(deftest test-yaml
  (setq lisp::*error-handler* 'error)
  (write-info "Loading robot model~%")
  (load "sample1-yaml.l")
  (write-info "Create instances~%")
  (setq *robot* (samplerobot))
  (write-info "Check Instances name ~A~%" (send *robot* :name))
  (assert (equal (send *robot* :name) "SampleRobot"))
  (write-info "Check joint size -> ~d~%" (length (send *robot* :joint-list)))
  (assert (= (length (send *robot* :joint-list)) 29))
  (mapcar #'(lambda (a b)
              (write-info "~20A ~20A~%" (send a :name) (send b :name))
              (assert (equal a b)))
          (send *robot* :joint-list)
          (list
           (send *robot* :RLEG_HIP_R)
           (send *robot* :RLEG_HIP_P)
           (send *robot* :RLEG_HIP_Y)
           (send *robot* :RLEG_KNEE)
           (send *robot* :RLEG_ANKLE_P)
           (send *robot* :RLEG_ANKLE_R)
           (send *robot* :RARM_SHOULDER_P)
           (send *robot* :RARM_SHOULDER_R)
           (send *robot* :RARM_SHOULDER_Y)
           (send *robot* :RARM_ELBOW)
           (send *robot* :RARM_WRIST_Y)
           (send *robot* :RARM_WRIST_P)
           (send *robot* :RARM_WRIST_R)
           (send *robot* :LLEG_HIP_R)
           (send *robot* :LLEG_HIP_P)
           (send *robot* :LLEG_HIP_Y)
           (send *robot* :LLEG_KNEE)
           (send *robot* :LLEG_ANKLE_P)
           (send *robot* :LLEG_ANKLE_R)
           (send *robot* :LARM_SHOULDER_P)
           (send *robot* :LARM_SHOULDER_R)
           (send *robot* :LARM_SHOULDER_Y)
           (send *robot* :LARM_ELBOW)
           (send *robot* :LARM_WRIST_Y)
           (send *robot* :LARM_WRIST_P)
           (send *robot* :LARM_WRIST_R)
           (send *robot* :WAIST_P)
           (send *robot* :WAIST_R)
           (send *robot* :CHEST)
           ))
  (write-info "Done~%"))

(run-all-tests)

(exit)
